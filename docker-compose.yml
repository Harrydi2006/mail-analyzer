# 邮件智能日程管理系统 Docker Compose 配置
version: '3.8'

services:
  # 主应用服务
  mail-scheduler:
    build: .
    container_name: mail-scheduler-app
    ports:
      - "5000:5000"
      - "443:443"
    environment:
      - FLASK_ENV=production
      - PYTHONPATH=/app
      - SSL_ENABLED=${SSL_ENABLED:-false}
      - SSL_CERT_PATH=${SSL_CERT_PATH:-/app/ssl/ssl_cert.pem}
      - SSL_KEY_PATH=${SSL_KEY_PATH:-/app/ssl/ssl_key.pem}
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./config.yaml:/app/config.yaml
      - ./ssl:/app/ssl:ro
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - mail-scheduler-network
    healthcheck:
      test: ["CMD", "sh", "-c", "curl -f -k https://localhost:443/ || curl -f http://localhost:5000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis缓存服务（可选，用于会话存储和任务队列）
  redis:
    image: redis:7-alpine
    container_name: mail-scheduler-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - mail-scheduler-network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx反向代理（可选，用于生产环境）
  nginx:
    image: nginx:alpine
    container_name: mail-scheduler-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - mail-scheduler
    restart: unless-stopped
    networks:
      - mail-scheduler-network
    profiles:
      - production

  # 定时任务服务（可选，用于定期检查邮件和发送提醒）
  scheduler:
    build: .
    container_name: mail-scheduler-cron
    environment:
      - FLASK_ENV=production
      - PYTHONPATH=/app
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./config.yaml:/app/config.yaml
    depends_on:
      - mail-scheduler
      - redis
    restart: unless-stopped
    networks:
      - mail-scheduler-network
    command: python -c "import time; from src.services.email_service import EmailService; from src.services.scheduler_service import SchedulerService; from src.core.config import Config; config = Config(); email_service = EmailService(config); scheduler_service = SchedulerService(config); [time.sleep(300) or email_service.fetch_new_emails() or scheduler_service.process_reminders() for _ in iter(int, 1)]"
    profiles:
      - production

volumes:
  redis_data:
    driver: local

networks:
  mail-scheduler-network:
    driver: bridge

# 开发环境配置
# 使用方法: docker-compose up
# 生产环境配置
# 使用方法: docker-compose --profile production up